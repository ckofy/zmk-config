/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  |  F   |  P   |  B   |                                          |  J   |  L    |  U    |  Y   |   ;   | BSPC |
// |  ESC  |  A  |  R  |  S   |  T   |  G   |                                          |  M   |  N    |  E    |  I   |   O   |   '  |
// | SHIFT |  Z  |  X  |  C   |  D   |  V   | L SHIFT | L SHIFT |  | R SHIFT |  DEL    |  K   |  H    |  ,    |  .   |   /   | RET  |
//                     | GUI  | ALT  | LWR  |  SPACE  | L CTRL  |  |   RET   | L SHIFT | RSE  | ALT   | GUI   |
			bindings = <
	&kp ESC   &kp Q &kp W &kp E    &kp R    &kp T                                                &kp J &kp L    &kp U     &kp Y   &kp SEMI &kp BSPC
	&kp TAB   &kp A &kp S &kp D    &kp F    &kp G                                                &kp M &kp N    &kp E     &kp I   &kp O    &kp SQT
	&kp LSHFT &kp Z &kp X &kp C    &kp V    &kp B &kp BSPC  &kp LSHFT        &kp RSHFT &kp DEL   &kp K &kp H    &kp COMMA &kp DOT &kp FSLH &kp RET
	                      &kp LGUI &kp LALT &mo 1 &kp SPACE &kp LCTRL        &kp RET   &kp LSHFT &mo 2 &kp RALT &kp RGUI
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
                lower_layer {
                        bindings = <
	&bt BT_CLR   &kp LG(Q) &kp N0    &kp LC(E) &kp CAPS  &kp LC(B)                                  &kp PG_UP &kp HOME &kp UP   &kp END   &kp DEL  &trans
	&bt BT_SEL 0 &kp LGUI  &kp LALT  &kp LSHFT &kp LCTRL &kp LC(S)                                  &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp BSPC &trans
	&bt BT_SEL 1 &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp NO   &trans &trans        &trans &trans  &kp INS &kp NO   &trans   &trans    &trans   &trans
	                                 &trans    &trans    &trans   &trans &trans        &trans &trans  &trans  &trans   &trans
                        >;
                };

                raise_layer {
                        bindings = <
	&rgb_ug RGB_TOG &kp AMPS &kp PRCNT &kp HASH &kp LPAR  &kp EXCL                                   &kp ASTRK  &kp RPAR  &kp AT &kp DLLR &kp CARET &trans
	&rgb_ug RGB_EFF &kp N7   &kp N5    &kp N3   &kp N1    &kp N9                                       &kp N8   &kp N0    &kp N2 &kp N4   &kp N6    &kp BSLH
	&rgb_ug RGB_HUI &kp GRAVE &kp LBKT  &kp RBKT &kp UNDER &kp EQUAL &trans &trans       &trans  &trans &kp PLUS &kp MINUS &trans &trans   &trans    &trans 
	                                    &trans   &trans    &trans    &trans &trans       &trans  &trans &trans   &trans    &trans 
                        >;
                };		
		
		
	};
};
